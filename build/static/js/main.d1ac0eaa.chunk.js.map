{"version":3,"sources":["components/Navbar.js","components/Landing.js","components/FormInput.js","components/Icon.js","components/LoadingIcon.js","components/PollConfirmationModal.js","components/PollCreatedModal.js","utils/index.js","components/PollNew.js","components/PollDroppable.js","components/PollSelectionModal.js","components/PollSuccessModal.js","components/PollSelection.js","components/PollResults.js","components/App.js","serviceWorker.js","index.js","images/landing_img.png","images/sun.png","images/logo.svg"],"names":["Navbar","react_default","a","createElement","title","href","className","alt","src","logo","Component","Landing","state","img1Loaded","img2Loaded","_this","setState","el","document","getElementById","parentNode","removeChild","imagesLoaded","_this2","this","react","components_Navbar","style","maxWidth","margin","position","sunImg","concat","landingImg","width","id","display","onLoad","padding","target","rel","alignItems","justifyContent","height","frameBorder","allow","allowFullScreen","background","color","fontSize","FormInput","focused","handleFocus","touched","handleBlur","hasError","props","submitted","error","_this$props","type","name","label","value","index","autoComplete","onFocus","onBlur","onChange","event","handleChange","onClick","removeInput","vectors","plus","path","viewBox","Icon","_ref","icon","aria-hidden","role","xmlns","fill","d","LoadingIcon","classOption","PollConfirmationModal","submitting","handleSubmit","axios","post","values","then","data","status","handleSuccess","catch","err","console","log","renderEmails","emails","split","map","email","i","key","trim","renderOptions","options","filter","length","option","modalStatus","handleModalClose","marginBottom","textAlign","borderTop","borderBottom","paddingLeft","components_LoadingIcon","PollCreatedModal","pollID","inputValidation","input","nameValidation","test","emailValidation","re","invalidEmails","ordinals","PollNew","inputCount","createdBy","errors","arguments","undefined","Object","assign","validateInputs","callback","submitAction","preventDefault","addInput","submitBtn","scrollIntoView","behavior","len","isDisabled","renderInputs","inputArr","push","components_FormInput","components_PollConfirmationModal","components_PollCreatedModal","onSubmit","paddingBottom","ref","marginTop","disabled","components_Icon","PollDroppable","renderPlaceholders","dragValue","placeholders","itemLength","items","top","react_beautiful_dnd_esm","droppableId","provided","snapshot","innerRef","isDraggingOver","item","draggableId","draggableProps","dragHandleProps","isDragging","draggableStyle","objectSpread","userSelect","overflow","boxShadow","border","borderRadius","zIndex","content","placeholder","PollSelectionModal","voterID","selections","res","renderSelections","selection","letterSpacing","textDecoration","PollSuccessModal","reorder","list","startIndex","endIndex","result","Array","from","_result$splice","splice","removed","slicedToArray","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","_sourceClone$splice","PollSelection","poll","success","selected","id2List","droppable","droppable2","getList","onDragEnd","resetItems","toConsumableArray","replace","window","alert","match","params","get","_this3","voted","components_PollDroppable","_this4","renderContent","components_PollSelectionModal","components_PollSuccessModal","PollResults","voters","v","allVotesReceived","sel","cursor","pendingVoters","pv","winner","_this$state$poll","resultArray","winCutoff","overflowX","fontWeight","colSpan","val","cell","renderWinner","votesReceived","totalVoters","toFixed","renderResultsTable","renderVoters","renderPendingVoters","App","BrowserRouter","Switch","Route","exact","component","Boolean","location","hostname","ReactDOM","render","components_App","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"6NAsBeA,mLAjBP,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,KAAGC,MAAM,aAAaC,KAAK,IAAIC,UAAU,6BACrCL,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,OAAKI,IAAI,OAAOC,IAAKC,OAC3BR,EAAAC,EAAAC,cAAA,QAAMG,UAAU,YAAhB,WAAyCL,EAAAC,EAAAC,cAAA,QAAMG,UAAU,YAAhB,QAE7CL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,yBACXL,EAAAC,EAAAC,cAAA,KAAGE,KAAK,YAAYC,UAAU,eAC1BL,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,uCAXHO,+CC4ENC,6MAxEXC,MAAQ,CACJC,YAAY,EACZC,YAAY,KAEhBD,WAAa,WACTE,EAAKC,SAAS,CAACH,YAAY,IAC3B,IAAII,EAAKC,SAASC,eAAe,iBACjCF,EAAGG,WAAWC,YAAYJ,MAE9BH,WAAa,WACTC,EAAKC,SAAS,CAACF,YAAY,IAC3B,IAAIG,EAAKC,SAASC,eAAe,iBACjCF,EAAGG,WAAWC,YAAYJ,MAE9BK,aAAe,WACX,OAAGP,EAAKH,MAAMC,YAAcE,EAAKH,MAAME,WAC5B,UAEJ,4EAEH,IAAAS,EAAAC,KACJ,OACIvB,EAAAC,EAAAC,cAACsB,EAAA,SAAD,KACIxB,EAAAC,EAAAC,cAACuB,EAAD,MACAzB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kDACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,mCACXL,EAAAC,EAAAC,cAAA,OAAKwB,MAAO,CAACC,SAAU,IAAKC,OAAQ,OAAQC,SAAU,aAClD7B,EAAAC,EAAAC,cAAA,OAAKI,IAAI,MAAMC,IAAKuB,IAAQzB,UAAS,sBAAA0B,OAAwBR,KAAKF,kBAClErB,EAAAC,EAAAC,cAAA,OAAKI,IAAI,SAASC,IAAKyB,IAAYC,MAAM,OAAO5B,UAAS,cAAA0B,OAAgBR,KAAKF,kBAC9ErB,EAAAC,EAAAC,cAAA,OAAKgC,GAAG,gBAAgB5B,IAAI,UAAUC,IAAKuB,IAAQG,MAAM,OAAOP,MAAO,CAACS,QAAS,QAASC,OAAQ,kBAAMd,EAAKV,gBAC7GZ,EAAAC,EAAAC,cAAA,OAAKgC,GAAG,gBAAgB5B,IAAI,UAAUC,IAAKyB,IAAYC,MAAM,OAAOP,MAAO,CAACS,QAAS,QAASC,OAAQ,kBAAMd,EAAKT,kBAGzHb,EAAAC,EAAAC,cAAA,OAAKG,UAAU,mCACXL,EAAAC,EAAAC,cAAA,OAAKwB,MAAO,CAACC,SAAU,MACnB3B,EAAAC,EAAAC,cAAA,OAAKG,UAAU,oBAAf,4BACAL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,sBAAf,iKAKZL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,MAAMqB,MAAO,CAACW,QAAS,cAClCrC,EAAAC,EAAAC,cAAA,OAAKG,UAAU,iBACXL,EAAAC,EAAAC,cAAA,OAAKwB,MAAO,CAACC,SAAU,IAAKC,OAAQ,SAChC5B,EAAAC,EAAAC,cAAA,OAAKG,UAAU,oBAAf,gBACAL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,aAAb,2qBAO2EL,EAAAC,EAAAC,cAAA,KAAGoC,OAAO,SAASC,IAAI,sBAAsBlC,UAAU,OAAOD,KAAK,uDAAnE,0BAP3E,OAURJ,EAAAC,EAAAC,cAAA,OAAKG,UAAU,sCAAsCqB,MAAO,CAACC,SAAU,IAAKU,QAAS,GAAIF,QAAS,OAAQK,WAAY,SAAUC,eAAgB,WAC5IzC,EAAAC,EAAAC,cAAA,UAAQC,MAAM,0BAA0B8B,MAAM,OAAOS,OAAO,QAAQnC,IAAI,4CAA4CoC,YAAY,IAAIC,MAAM,0EAA0EC,iBAAe,MAG3O7C,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cAAcqB,MAAO,CAACW,QAAS,YAAaS,WAAY,OAAQC,MAAO,SAClF/C,EAAAC,EAAAC,cAAA,OAAKG,UAAU,oBAAf,6BACAL,EAAAC,EAAAC,cAAA,KAAGwB,MAAO,CAACsB,SAAU,GAAIrB,SAAU,IAAKC,OAAQ,mBAAhD,kLAEA5B,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,EAAAC,EAAAC,cAAA,KAAGE,KAAK,YAAYC,UAAU,iBAA9B,mCAjEFI,aCyCPwC,6MA5CXtC,MAAM,CACFuC,SAAS,KAEbC,YAAc,WACVrC,EAAKC,SAAS,CAACmC,SAAS,EAAME,SAAS,OAE3CC,WAAa,WACTvC,EAAKC,SAAS,CAACmC,SAAS,OAE5BI,SAAW,WACP,OAAQxC,EAAKyC,MAAMC,WAAa1C,EAAKyC,MAAME,+EAEvC,IAAAnC,EAAAC,KAAAmC,EAC6CnC,KAAKgC,MAA/CI,EADHD,EACGC,KAAMC,EADTF,EACSE,KAAMC,EADfH,EACeG,MAAOC,EADtBJ,EACsBI,MAAOC,EAD7BL,EAC6BK,MAAON,EADpCC,EACoCD,MACxC,OACIzD,EAAAC,EAAAC,cAAA,OAAKG,UAAS,kBAAA0B,OAAoBR,KAAKZ,MAAMuC,QAAU,WAAa,IAAtDnB,OAA2DR,KAAK+B,WAAa,aAAe,KACtGtD,EAAAC,EAAAC,cAAA,OAAKG,UAAU,yBACfL,EAAAC,EAAAC,cAAA,OAAKG,UAAS,QAAA0B,OAAUR,KAAKZ,MAAMuC,SAAW3B,KAAKgC,MAAMO,MAAQ,WAAa,KAAOD,GACjF7D,EAAAC,EAAAC,cAAA,SACI8D,aAAqB,WAAPJ,GAA0B,cAAPA,EAAqBA,EAAO,MAC7DvD,UAAU,aACVsD,KAAMA,EACNC,KAAMA,EACNK,QAAS,kBAAM3C,EAAK6B,eACpBe,OAAQ,kBAAM5C,EAAK+B,cACnBS,MAAOA,EACPK,SAAU,SAAAC,GAAK,OAAI9C,EAAKiC,MAAMc,aAAaD,EAAM9B,OAAOwB,MAAOF,EAAMG,OAG7E/D,EAAAC,EAAAC,cAAA,OAAKG,UAAU,oBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,mBAEnBL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aAAckB,KAAK+B,YAAeG,GAChDM,EAAQ,GAAK/D,EAAAC,EAAAC,cAAA,UACEG,UAAU,cACVF,MAAM,4BACNmE,QAAS,kBAAMhD,EAAKiC,MAAMgB,YAAYR,KACtC/D,EAAAC,EAAAC,cAAA,6BAtCRO,aCAlB+D,EAAU,CACZC,KAAM,CAACC,KAAM,kPACTC,QAAS,gBASFC,EANF,SAAAC,GAAyB,IAAvB9B,EAAuB8B,EAAvB9B,MAAO+B,EAAgBD,EAAhBC,KAAM7C,EAAU4C,EAAV5C,MACxB,OACIjC,EAAAC,EAAAC,cAAA,OAAK6E,cAAY,OAAOC,KAAK,MAAMC,MAAM,6BAA6BN,QAASH,EAAQM,GAAMH,QAASjD,MAAO,CAACO,UAAQjC,EAAAC,EAAAC,cAAA,QAAMgF,KAAMnC,EAAOoC,EAAGX,EAAQM,GAAMJ,SCMnJU,EAbK,SAAAP,GAAmB,IAAjBQ,EAAiBR,EAAjBQ,YAClB,OACIrF,EAAAC,EAAAC,cAACsB,EAAA,SAAD,KACIxB,EAAAC,EAAAC,cAAA,OAAKG,UAAS,GAAA0B,OAAKsD,GAAe,qBAAuB/E,IAAI,cACzDN,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,aAEHmF,GAAerF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QAAf,iCC6DbiF,6MAnEX3E,MAAQ,CACJ4E,YAAY,EACZ9B,OAAO,KAEX+B,aAAe,WACX1E,EAAKC,SAAS,CAACwE,YAAY,IAC3BE,IAAMC,KAAK,mBAAoB5E,EAAKyC,MAAMoC,QACzCC,KAAM,SAAAf,GAAoB,IAAlBgB,EAAkBhB,EAAlBgB,KACO,MADWhB,EAAZiB,OAEPhF,EAAKyC,MAAMwC,cAAcF,GAGzB/E,EAAKC,SAAS,CAAC0C,OAAO,EAAM8B,YAAY,MAG/CS,MAAO,SAAAC,GACJC,QAAQC,IAAIF,GACZnF,EAAKC,SAAS,CAAC0C,OAAO,EAAM8B,YAAY,SAGhDa,aAAe,WACX,OAAOtF,EAAKyC,MAAMoC,OAAOU,OAAOC,MAAM,KAAKC,IAAK,SAACC,EAAOC,GACpD,OAAOzG,EAAAC,EAAAC,cAAA,MAAIwG,IAAG,GAAA3E,OAAKyE,EAAQC,IAAMD,EAAMG,aAG/CC,cAAgB,WACZ,OAAO9F,EAAKyC,MAAMoC,OAAOkB,QAAQC,OAAO,SAAAL,GAAC,OAAIA,EAAEM,OAAS,IAAGR,IAAK,SAACS,EAAQP,GACrE,OAAQzG,EAAAC,EAAAC,cAAA,MAAIwG,IAAG,UAAA3E,OAAY0E,IAAMO,8EAGjC,IAAA1F,EAAAC,KAAAmC,EAC4CnC,KAAKgC,MAA9C0D,EADHvD,EACGuD,YAAatB,EADhBjC,EACgBiC,OAAQuB,EADxBxD,EACwBwD,iBAC5B,OACIlH,EAAAC,EAAAC,cAAA,OAAKG,UAAS,kBAAA0B,OAAoBkF,IAC9BjH,EAAAC,EAAAC,cAAA,OAAKG,UAAU,wBACXL,EAAAC,EAAAC,cAAA,OAAKwB,MAAO,CAACsB,SAAU,GAAImE,aAAc,IAAK9G,UAAU,eAAxD,gBACAL,EAAAC,EAAAC,cAAA,KAAGwB,MAAO,CAACyF,aAAc,GAAInE,SAAU,GAAIoE,UAAW,WAAtD,kEACApH,EAAAC,EAAAC,cAAA,OAAKG,UAAU,2BAA2BqB,MAAO,CAAC2F,UAAW,iBAAkBC,aAAc,mBACzFtH,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,8BAA8ByF,EAAOxF,OAC1CH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIwB,MAAO,CAAC6F,YAAa,KACpBhG,KAAKqF,mBAIlB5G,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIwB,MAAO,CAAC6F,YAAa,KACpBhG,KAAK6E,mBAKrB7E,KAAKZ,MAAM4E,WAAavF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kBAAiBL,EAAAC,EAAAC,cAACsH,EAAD,OAAyBxH,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cAC7FL,EAAAC,EAAAC,cAAA,UAAQoE,QAAS,kBAAM4C,KAAoB7G,UAAU,sBAArD,UACAL,EAAAC,EAAAC,cAAA,UAAQoE,QAAS,kBAAMhD,EAAKkE,gBAAgBnF,UAAU,oCAAtD,gBAEHkB,KAAKZ,MAAM8C,OAASzD,EAAAC,EAAAC,cAAA,OAAKwB,MAAO,CAACqB,MAAO,WAAY1C,UAAU,mBAA1C,uDA7DLI,aCqBrBgH,EAvBU,SAAA5C,GAAc,IAAZ6C,EAAY7C,EAAZ6C,OACvB,OACI1H,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKG,UAAS,mCACVL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,wBACXL,EAAAC,EAAAC,cAAA,OAAKwB,MAAO,CAACqB,MAAO,UAAWC,SAAU,GAAImE,aAAc,KAA3D,YACAnH,EAAAC,EAAAC,cAAA,OAAKwB,MAAO,CAAC4F,aAAc,iBAAkBD,UAAW,iBAAkBhF,QAAS,YAAaT,OAAQ,cACpG5B,EAAAC,EAAAC,cAAA,OAAKwB,MAAO,CAACE,OAAQ,OAAQD,SAAU,MAAvC,uKAMJ3B,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAAA,KAAGE,KAAK,IAAIC,UAAU,sBAAtB,WACAL,EAAAC,EAAAC,cAAA,KAAGE,KAAI,SAAA2B,OAAW2F,EAAX,YAA6BrH,UAAU,oCAA9C,qBCjBXsH,EAAkB,SAAAC,GAC3B,OAAIA,EAGKA,EAAMb,OAAS,GACb,wCAEJ,KALI,4BAQFc,EAAiB,SAAAD,GAC1B,OAAIA,GAGsC,IAAjC,iBAAiBE,KAAKF,GACpB,8BAEJ,KALI,4BAQFG,EAAkB,SAAA1B,GAC3B,IAAKA,EACD,MAAO,2BAEX,IAAM2B,EAAK,6EACLC,EAAgB5B,EAAOC,MAAM,KAClCC,IAAI,SAAAC,GAAK,OAAIA,EAAMG,SACnBG,OAAO,SAAAN,GAAK,OAAuB,IAAnBwB,EAAGF,KAAKtB,KACzB,OAAIyB,EAAclB,OAAS,EACvB,qCAAAhF,OAA4CkG,GAE5C5B,EAAOC,MAAM,KAAKS,OAAS,IACpB,gDAEJ,MAGEmB,EAAW,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,QCgIzEC,6MA5JXxH,MAAQ,CACJyH,WAAY,EACZzC,OAAQ,CACJU,OAAQ,GACRlG,MAAO,GACPkI,UAAW,GACXxB,QAAS,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAElDyB,OAAQ,CACJjC,OAAQ,GACRlG,MAAO,GACPkI,UAAW,GACXxB,QAAS,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAElDvD,UAAU,EACVE,WAAW,EACXkE,OAAQ,KACRT,YAAa,YAKjB5C,aAAe,SAACP,EAAOF,GAAuB,IAAjBG,EAAiBwE,UAAAxB,OAAA,QAAAyB,IAAAD,UAAA,GAAAA,UAAA,GAAT,KAC7B5C,EAAS8C,OAAOC,OAAO,GAAI5H,EAAKH,MAAMgF,QACvC5B,EACC4B,EAAOkB,QAAQ9C,EAAM,GAAKD,EAG1B6B,EAAO/B,GAAQE,EAEnBhD,EAAKC,SAAS,CAAC4E,UAAS7E,EAAK6H,mBAEjCA,eAAiB,SAACC,GACd,IAAItF,GAAW,EACXgF,EAASG,OAAOC,OAAO,GAAI5H,EAAKH,MAAM2H,QAC1CA,EAAOjC,OAAS0B,EAAgBjH,EAAKH,MAAMgF,OAAOU,QAClDiC,EAAOnI,MAAQwH,EAAgB7G,EAAKH,MAAMgF,OAAOxF,OACjDmI,EAAOD,UAAYR,EAAe/G,EAAKH,MAAMgF,OAAO0C,YACjDC,EAAOjC,QAAUiC,EAAOnI,SAAQmD,GAAW,GAC9C,IAAK,IAAImD,EAAI,EAAGA,EAAI3F,EAAKH,MAAMyH,WAAY3B,IACvC6B,EAAOzB,QAAQJ,GAAKkB,EAAgB7G,EAAKH,MAAMgF,OAAOkB,QAAQJ,IAC3D6B,EAAOzB,QAAQJ,KAAInD,GAAW,GAErCxC,EAAKC,SAAS,CAACuH,SAAQhF,YAAWsF,MAEtCC,aAAe,WACP/H,EAAKH,MAAM2C,UACXxC,EAAKC,SAAS,CAACkG,YAAa,YAGpCzB,aAAe,SAAApB,GACXA,EAAM0E,iBACNhI,EAAKC,SAAS,CAACyC,WAAW,GAAO1C,EAAK6H,eAAe7H,EAAK+H,kBAE9D9C,cAAgB,SAAA2B,GACZ5G,EAAKC,SAAS,CAAC2G,SAAQT,YAAa,cAExC8B,SAAW,WACPjI,EAAKC,SAAS,CAACqH,WAAYtH,EAAKH,MAAMyH,WAAW,IACjDtH,EAAKkI,UAAUC,eAAe,CAAEC,SAAU,cAE9C3E,YAAc,SAAAR,GACV,IAAI4B,EAAS8C,OAAOC,OAAO,GAAI5H,EAAKH,MAAMgF,QAC1CA,EAAOkB,QAAQ9C,EAAM,GAAK,GAE1B,IADA,IAAIoF,EAAMxD,EAAOkB,QAAQE,OACjBN,EAAI1C,EAAQ,EAAG0C,EAAI0C,EAAM,EAAG1C,IAChCd,EAAOkB,QAAQJ,GAAKd,EAAOkB,QAAQJ,EAAE,GAEzCd,EAAOkB,QAAQsC,GAAO,GACtBrI,EAAKC,SAAS,CAAC4E,SAAQyC,WAAYtH,EAAKH,MAAMyH,WAAa,OAE/DgB,WAAa,WACT,OAAOtI,EAAKH,MAAMyH,YAActH,EAAKH,MAAMgF,OAAOkB,QAAQE,UAE9DsC,aAAe,WAEX,IADA,IAAIC,EAAS,GACL7C,EAAI,EAAGA,EAAI3F,EAAKH,MAAMyH,WAAY3B,IACtC6C,EAASC,KAAKvJ,EAAAC,EAAAC,cAACsJ,EAAD,CACE9C,IAAG,SAAA3E,OAAW0E,GACd9C,KAAK,OACLC,KAAI,UAAA7B,OAAY0E,GAChB5C,MAAK,wBAAA9B,OAA0B0E,EAAE,GACjC1C,MAAO0C,EAAE,EACT3C,MAAOhD,EAAKH,MAAMgF,OAAOkB,QAAQJ,GACjChD,MAAO3C,EAAKH,MAAM2H,OAAOzB,QAAQJ,GACjCjD,UAAW1C,EAAKH,MAAM6C,UACtBa,aAAcvD,EAAKuD,aACnBE,YAAazD,EAAKyD,eAGtC,OAAO+E,uFAtEPrI,SAASd,MAAQ,kEAwEb,IAAAmB,EAAAC,KACJ,OACIvB,EAAAC,EAAAC,cAACsB,EAAA,SAAD,KACgC,SAA3BD,KAAKZ,MAAMsG,aAA0BjH,EAAAC,EAAAC,cAACuJ,EAAD,CACExC,YAAa,OACbtB,OAAQpE,KAAKZ,MAAMgF,OACnBuB,iBAAkB,kBAAM5F,EAAKP,SAAS,CAACkG,YAAa,YACpDlB,cAAexE,KAAKwE,gBAE3DxE,KAAKZ,MAAM+G,QAAU1H,EAAAC,EAAAC,cAACwJ,EAAD,CAAkBhC,OAAQnG,KAAKZ,MAAM+G,SAC3D1H,EAAAC,EAAAC,cAACuB,EAAD,MACAzB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kBACXL,EAAAC,EAAAC,cAAA,MAAIG,UAAU,eAAd,yBACAL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,mBAAmBqB,MAAO,CAACE,OAAQ,OAAQD,SAAU,MAApE,wGACA3B,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kBACXL,EAAAC,EAAAC,cAAA,QAAMyJ,SAAUpI,KAAKiE,cACjBxF,EAAAC,EAAAC,cAAA,SAAOyD,KAAK,SAASG,MAAM,cAC3B9D,EAAAC,EAAAC,cAACsJ,EAAD,CACI7F,KAAK,OACLC,KAAK,YACLC,MAAM,uBACNC,MAAOvC,KAAKZ,MAAMgF,OAAO0C,UACzB5E,MAAOlC,KAAKZ,MAAM2H,OAAOD,UACzB7E,UAAWjC,KAAKZ,MAAM6C,UACtBa,aAAc9C,KAAK8C,eAEvBrE,EAAAC,EAAAC,cAACsJ,EAAD,CACI7F,KAAK,OACLC,KAAK,SACLC,MAAM,qBACNC,MAAOvC,KAAKZ,MAAMgF,OAAOU,OACzB5C,MAAOlC,KAAKZ,MAAM2H,OAAOjC,OACzB7C,UAAWjC,KAAKZ,MAAM6C,UACtBa,aAAc9C,KAAK8C,eAEvBrE,EAAAC,EAAAC,cAACsJ,EAAD,CACI7F,KAAK,OACLC,KAAK,QACLC,MAAM,qBACNC,MAAOvC,KAAKZ,MAAMgF,OAAOxF,MACzBsD,MAAOlC,KAAKZ,MAAM2H,OAAOnI,MACzBqD,UAAWjC,KAAKZ,MAAM6C,UACtBa,aAAc9C,KAAK8C,eAEtB9C,KAAK8H,eACNrJ,EAAAC,EAAAC,cAAA,OAAKwB,MAAO,CAACkI,cAAe,KACxB5J,EAAAC,EAAAC,cAAA,UACA2J,IAAK,SAAA7I,GAAE,OAAIM,EAAK0H,UAAYhI,GAC5BX,UAAS,8BAFT,iBAMRL,EAAAC,EAAAC,cAAA,UACIwB,MAAO,CAACoI,WAAY,IACpBzJ,UAAS,2BAAA0B,OAA6BR,KAAK6H,aAAe,YAAa,IACvEW,SAAUxI,KAAK6H,aACf9E,QAAS,kBAAMhD,EAAKyH,aAAY/I,EAAAC,EAAAC,cAAC8J,EAAD,CAAMlF,KAAK,OAAO7C,MAAM,OAAOc,MAAM,SAJzE,IAIkF/C,EAAAC,EAAAC,cAAA,qCArJpFO,6CCoEPwJ,6MA9CXC,mBAAqB,SAACC,GAElB,IADA,IAAIC,EAAe,GACV3D,EAAI,EAAGA,EAAI3F,EAAKyC,MAAM8G,WAAY5D,IACvC2D,EAAab,KACTvJ,EAAAC,EAAAC,cAAA,OAAKG,UAAU,mBAAmBqG,IAAG,MAAA3E,OAAQ0E,GAAK/E,MAAO,CAACS,QAASrB,EAAKyC,MAAM+G,MAAMvD,OAASoD,EAAY1D,EAAI,OAAQ,OAAQ8D,IAAS,IAAJ9D,EAAU,KAA5I,aACeyB,EAASzB,GADxB,iBAKR,OAAO2D,2EAEH,IAAA9I,EAAAC,KACJ,OACIvB,EAAAC,EAAAC,cAACsK,EAAA,EAAD,CAAWC,YAAalJ,KAAKgC,MAAMkH,aAClC,SAACC,EAAUC,GAAX,OACG3K,EAAAC,EAAAC,cAAA,OACI2J,IAAKa,EAASE,SACdlJ,OA1BEmJ,EA0BkBF,EAASE,eA1BXR,EA0B2B/I,EAAKiC,MAAM8G,WA1BtB,CAClDvH,WAAY+H,EAAiB,OAAS,OACtCxI,QAAS,GACTJ,MAAO,OACPS,OAAS,IAAM2H,EAAc,GAC7BxI,SAAU,cAsBOP,EAAKiC,MAAM+G,MAAM/D,IAAI,SAACuE,EAAM/G,GAAP,OAClB/D,EAAAC,EAAAC,cAACsK,EAAA,EAAD,CACI9D,IAAKoE,EAAK5I,GACV6I,YAAaD,EAAK5I,GAClB6B,MAAOA,GACN,SAAC2G,EAAUC,GAAX,OACG3K,EAAAC,EAAAC,cAAA,MAAAuI,OAAAC,OAAA,CACImB,IAAKa,EAASE,UACVF,EAASM,eACTN,EAASO,gBAHjB,CAIIvJ,OAtDdwJ,EAuDkBP,EAASO,WAvDfC,EAwDMT,EAASM,eAAetJ,MAxD3C+G,OAAA2C,EAAA,EAAA3C,CAAA,CACjB4C,WAAY,OACZ3I,OAAQ,IACRP,QAAS,OACTmJ,SAAU,SACV9I,WAAY,SACZC,eAAgB,SAChB0E,aAAc,GACdrE,WAAYoI,EAAa,OAAS,UAClCnI,MAAOmI,EAAa,OAAS,OAC7BK,UAAWL,EAAa,yFAA2F,OACnHM,OAAQ,iBACRC,aAAc,EACdC,OAAQ,OACLP,MA4C8BL,EAAKa,SA1DrB,IAACT,EAAYC,MA+DY,eAAzB7J,EAAKiC,MAAMkH,aAA8BnJ,EAAK4I,mBAAmBS,EAASE,eAAiB,EAAI,GAC/FH,EAASkB,aA/CT,IAACf,EAAgBR,WAQV5J,aCiCboL,6MAxDXlL,MAAQ,CACJ4E,YAAY,EACZ9B,OAAO,KAEX+B,aAAe,WACX1E,EAAKC,SAAS,CAACwE,YAAY,IAC3BE,IAAMC,KAAN,aAAA3D,OAAwBjB,EAAKyC,MAAMmE,OAAnC,WAAA3F,OAAmDjB,EAAKyC,MAAMuI,SAAWhL,EAAKyC,MAAMwI,YACnFnG,KAAM,SAAAoG,GACa,MAAbA,EAAIlG,OACHhF,EAAKyC,MAAMwC,gBAGXjF,EAAKC,SAAS,CAAC0C,OAAO,EAAM8B,YAAY,MAG/CS,MAAO,WACJlF,EAAKC,SAAS,CAAC0C,OAAO,EAAM8B,YAAY,SAGhD0G,iBAAmB,WAChB,OAAOnL,EAAKyC,MAAMwI,WAAWxF,IAAK,SAAC2F,EAAWnI,GACzC,OAAO/D,EAAAC,EAAAC,cAAA,MAAIwG,IAAG,KAAA3E,OAAOgC,IACT/D,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,cAASgI,EAASnE,GAAlB,aACJ/D,EAAAC,EAAAC,cAAA,UAAKgM,+EAKjB,IAAA5K,EAAAC,KAAAmC,EAC2CnC,KAAKgC,MAA7C0D,EADHvD,EACGuD,YAAa9G,EADhBuD,EACgBvD,MAAO+G,EADvBxD,EACuBwD,iBAC3B,OACIlH,EAAAC,EAAAC,cAAA,OAAKG,UAAS,8BAAA0B,OAAgCkF,IAC1CjH,EAAAC,EAAAC,cAAA,OAAKG,UAAU,wBACXL,EAAAC,EAAAC,cAAA,OAAKwB,MAAO,CAACsB,SAAU,GAAImE,aAAc,KAAMhH,GAC/CH,EAAAC,EAAAC,cAAA,KAAGwB,MAAO,CAACyF,aAAc,GAAInE,SAAU,KAAvC,kEACAhD,EAAAC,EAAAC,cAAA,OAAKwB,MAAO,CAAC4F,aAAc,iBAAkBD,UAAW,iBAAkBhF,QAAS,sBAAuBT,OAAQ,cAC9G5B,EAAAC,EAAAC,cAAA,OAAKwB,MAAO,CAACqB,MAAO,OAAQoJ,cAAe,EAAGhF,aAAc,GAAInE,SAAU,GAAIoJ,eAAgB,cAA9F,mBACApM,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAOG,UAAU,SACbL,EAAAC,EAAAC,cAAA,aACKqB,KAAK0K,uBAKrB1K,KAAKZ,MAAM4E,WAAavF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kBAAiBL,EAAAC,EAAAC,cAACsH,EAAD,OAAyBxH,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cAC7FL,EAAAC,EAAAC,cAAA,UAAQoE,QAAS,kBAAM4C,KAAoB7G,UAAU,sBAArD,UACAL,EAAAC,EAAAC,cAAA,UAAQoE,QAAS,kBAAMhD,EAAKkE,gBAAgBnF,UAAU,oCAAtD,gBAEHkB,KAAKZ,MAAM8C,OAASzD,EAAAC,EAAAC,cAAA,OAAKwB,MAAO,CAACqB,MAAO,WAAY1C,UAAU,mBAA1C,uDAlDRI,aCkBlB4L,EArBU,SAAAxH,GAAc,IAAZ6C,EAAY7C,EAAZ6C,OACvB,OACI1H,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKG,UAAS,mCACVL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,wBACXL,EAAAC,EAAAC,cAAA,OAAKwB,MAAO,CAACqB,MAAO,UAAWC,SAAU,GAAImE,aAAc,KAA3D,YACAnH,EAAAC,EAAAC,cAAA,OAAKwB,MAAO,CAAC4F,aAAc,iBAAkBD,UAAW,iBAAkBhF,QAAS,YAAaT,OAAQ,cACpG5B,EAAAC,EAAAC,cAAA,OAAKwB,MAAO,CAACE,OAAQ,OAAQD,SAAU,MAAvC,2FAIJ3B,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAAA,KAAGE,KAAK,IAAIC,UAAU,sBAAtB,WACAL,EAAAC,EAAAC,cAAA,KAAGE,KAAI,SAAA2B,OAAW2F,EAAX,YAA6BrH,UAAU,oCAA9C,qBCLlBiM,EAAU,SAACC,EAAMC,EAAYC,GAC/B,IAAMC,EAASC,MAAMC,KAAKL,GADkBM,EAE1BH,EAAOI,OAAON,EAAY,GAArCO,EAFqCtE,OAAAuE,EAAA,EAAAvE,CAAAoE,EAAA,MAI5C,OADAH,EAAOI,OAAOL,EAAU,EAAGM,GACpBL,GAGLO,EAAO,SAACC,EAAQC,EAAaC,EAAiBC,GAChD,IAAMC,EAAcX,MAAMC,KAAKM,GACzBK,EAAYZ,MAAMC,KAAKO,GAF4CK,EAGvDF,EAAYR,OAAOM,EAAgBrJ,MAAO,GAArDgJ,EAHkEtE,OAAAuE,EAAA,EAAAvE,CAAA+E,EAAA,MAIzED,EAAUT,OAAOO,EAAqBtJ,MAAO,EAAGgJ,GAChD,IAAML,EAAS,GAGf,OAFAA,EAAOU,EAAgB3C,aAAe6C,EACtCZ,EAAOW,EAAqB5C,aAAe8C,EACpCb,GAiKIe,6MA7JX9M,MAAQ,CACJ+M,KAAM,KACNjK,OAAO,EACPkK,SAAS,EACT1G,YAAa,SACboD,WAAY,EACZC,MAAO,GACPsD,SAAU,MAGdC,QAAU,CACNC,UAAW,QACXC,WAAY,cAGhBC,QAAU,SAAA9L,GAAE,OAAIpB,EAAKH,MAAMG,EAAK+M,QAAQ3L,OAExC+L,UAAY,SAAAvB,GAAU,IACVQ,EAAwBR,EAAxBQ,OAAQC,EAAgBT,EAAhBS,YAChB,GAAKA,EAGL,GAAID,EAAOzC,cAAgB0C,EAAY1C,YAAa,CAChD,IAAMH,EAAQgC,EACVxL,EAAKkN,QAAQd,EAAOzC,aACpByC,EAAOnJ,MACPoJ,EAAYpJ,OAEZpD,EAAQ,CAAE2J,SACa,eAAvB4C,EAAOzC,cACP9J,EAAQ,CAAEiN,SAAUtD,IAExBxJ,EAAKC,SAASJ,OACX,CACH,IAAM+L,EAASO,EACXnM,EAAKkN,QAAQd,EAAOzC,aACpB3J,EAAKkN,QAAQb,EAAY1C,aACzByC,EACAC,GAEJrM,EAAKC,SAAS,CACVuJ,MAAOoC,EAAOoB,UACdF,SAAUlB,EAAOqB,iBAyB7BG,WAAa,WACT,IACI5D,EADS7B,OAAA0F,EAAA,EAAA1F,CAAO3H,EAAKH,MAAM+M,KAAK7G,SACdN,IAAK,SAACuE,EAAM/G,GAAP,MAAkB,CACzC7B,GAAE,GAAAH,OAAK+I,EAAKsD,QAAQ,IAAK,KAAvBrM,OAA6BgC,GAC/B4H,QAASb,KAEbhK,EAAKC,SAAS,CAACuJ,QAAOsD,SAAU,QAEpCpI,aAAe,WACR1E,EAAKH,MAAMiN,SAAS7G,SAAWjG,EAAKH,MAAM0J,WACzCgE,OAAOC,MAAM,uDAGbxN,EAAKC,SAAS,CAACkG,YAAa,YAGpClB,cAAgB,WACZjF,EAAKC,SAAS,CAAC4M,SAAS,EAAM1G,YAAa,gGAtC3B,IAAA3F,EAAAC,KAChBN,SAASd,MAAQ,yCACjBoB,KAAKmG,OAASnG,KAAKgC,MAAMgL,MAAMC,OAAO9G,OACtCnG,KAAKuK,QAAUvK,KAAKgC,MAAMgL,MAAMC,OAAO1C,QACvCrG,IAAMgJ,IAAN,aAAA1M,OAAuBR,KAAKmG,OAA5B,WAAA3F,OAA4CR,KAAKuK,UAChDlG,KAAM,SAAAoG,GACH,GAAGA,EAAInG,KAAK,CACR,IAAIyE,EAAQ0B,EAAInG,KAAKgB,QAAQN,IAAK,SAACuE,EAAM/G,GAAP,MAAkB,CAChD7B,GAAE,GAAAH,OAAK+I,EAAKsD,QAAQ,IAAK,KAAvBrM,OAA6BgC,GAC/B4H,QAASb,KAEbxJ,EAAKP,SAAS,CAAC2M,KAAM1B,EAAInG,KAAMyE,QAAOD,WAAYC,EAAMvD,cAGxDzF,EAAKP,SAAS,CAAC0C,OAAO,MAG7BuC,MAAM,WACH1E,EAAKP,SAAS,CAAC0C,OAAO,8CAsBf,IAAAiL,EAAAnN,KACX,OAAGA,KAAKZ,MAAM8C,MAENzD,EAAAC,EAAAC,cAAA,+DAKEqB,KAAKZ,MAAM+M,KAQZnM,KAAKZ,MAAM+M,KAAKiB,MAEjB3O,EAAAC,EAAAC,cAAA,mDACyCF,EAAAC,EAAAC,cAAA,KAAGE,KAAI,SAAA2B,OAAWR,KAAKmG,OAAhB,YAAiChG,MAAO,CAACqB,MAAO,OAAQqJ,eAAgB,cAA/E,kCADzC,KAMJpM,EAAAC,EAAAC,cAAA,OAAKwB,MAAO,CAACC,SAAU,IAAKC,OAAQ,SAChC5B,EAAAC,EAAAC,cAAA,MAAIG,UAAU,cAAcqB,MAAO,CAACyF,aAAc,KAAM5F,KAAKZ,MAAM+M,KAAKvN,OACxEH,EAAAC,EAAAC,cAAA,OAAKG,UAAU,oBAAf,sFAEAL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kBACfL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,MAAMqB,MAAO,CAACyF,aAAc,KACvCnH,EAAAC,EAAAC,cAACsK,EAAA,EAAD,CAAiByD,UAAW1M,KAAK0M,WAC7BjO,EAAAC,EAAAC,cAAA,OAAKG,UAAU,oBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,2BAAf,WACAL,EAAAC,EAAAC,cAAC0O,EAAD,CAAetE,MAAO/I,KAAKZ,MAAM2J,MAAOG,YAAY,YAAYJ,WAAY9I,KAAKZ,MAAM0J,cAE3FrK,EAAAC,EAAAC,cAAA,OAAKG,UAAU,oBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,2BAAf,cACAL,EAAAC,EAAAC,cAAC0O,EAAD,CAAetE,MAAO/I,KAAKZ,MAAMiN,SAAUnD,YAAY,aAAaJ,WAAY9I,KAAKZ,MAAM0J,gBAIvGrK,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kBACfL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAAA,UAAQoE,QAAS,kBAAMoK,EAAKR,cAAc7N,UAAU,sBAApD,SACAL,EAAAC,EAAAC,cAAA,UAAQoE,QAAS,kBAAMoK,EAAKlJ,gBAAgB9D,MAAO,CAACO,MAAO,IAAKe,SAAU,IAAK3C,UAAU,kCAAzF,YAlCJL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACsH,EAAD,MADJ,+CAuCH,IAAAqH,EAAAtN,KACL,OACIvB,EAAAC,EAAAC,cAACsB,EAAA,SAAD,KACIxB,EAAAC,EAAAC,cAACuB,EAAD,MACAzB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,8BACVkB,KAAKuN,iBAEV9O,EAAAC,EAAAC,cAAC6O,EAAD,CACA7H,iBAAkB,kBAAM2H,EAAK9N,SAAS,CAACkG,YAAa,YACpDlB,cAAexE,KAAKwE,cACpBkB,YAAa1F,KAAKZ,MAAMsG,YACxB9G,MAAOoB,KAAKgC,MAAMpD,MAClB4L,WAAYxK,KAAKZ,MAAMiN,SAASrH,IAAK,SAAA1B,GAAA,OAAAA,EAAE8G,UACvCjE,OAAQnG,KAAKmG,OACboE,QAASvK,KAAKuK,UAEbvK,KAAKZ,MAAMgN,SAAW3N,EAAAC,EAAAC,cAAC8O,EAAD,CAAkBtH,OAAQnG,KAAKmG,iBAxJ1CjH,aCqKbwO,6MA1LXtO,MAAQ,CACJ+M,KAAM,KACNjK,OAAO,uFAES,IAAAnC,EAAAC,KAChBN,SAASd,MAAQ,iCACjBoB,KAAKmG,OAASnG,KAAKgC,MAAMgL,MAAMC,OAAO9G,OACtCjC,IAAMgJ,IAAN,gBAAA1M,OAA0BR,KAAKmG,SAC9B9B,KAAM,SAAAoG,GACe,MAAfA,EAAIlG,OACHxE,EAAKP,SAAS,CAAC2M,KAAM1B,EAAInG,OAGzBvE,EAAKP,SAAS,CAAC0C,OAAM,MAG5BuC,MAAO,WACJ1E,EAAKP,SAAS,CAAC0C,OAAO,6CAI1B,GAAGlC,KAAKZ,MAAM+M,KAAK,CACf,IAAIwB,EAAS3N,KAAKZ,MAAM+M,KAAKwB,OAAOpI,OAAQ,SAAAqI,GAAC,OAAIA,EAAER,QACnD,GAAGpN,KAAKZ,MAAM+M,KAAK0B,iBACf,OACIpP,EAAAC,EAAAC,cAACsB,EAAA,SAAD,KACIxB,EAAAC,EAAAC,cAAA,OAAKwB,MAAO,CAACE,OAAQ,YAAayF,UAAW,iBAAkBD,UAAW,OAAQpE,SAAU,KAA5F,qBACAhD,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACV6O,EAAO3I,IAAK,SAAC4I,EAAE1I,GACZ,OAAQzG,EAAAC,EAAAC,cAAA,OAAKwG,IAAG,QAAA3E,OAAU0E,GAAKpG,UAAU,cAC7BL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,oBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,iBAAiB8O,EAAE3I,OAClCxG,EAAAC,EAAAC,cAAA,SAAOG,UAAU,SACbL,EAAAC,EAAAC,cAAA,aACKiP,EAAEpD,WAAWxF,IAAK,SAAC8I,EAAK5I,GACrB,OAAQzG,EAAAC,EAAAC,cAAA,MAAIwG,IAAG,OAAA3E,OAAS0E,IACZzG,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,cAASgI,EAASzB,GAAlB,aACJzG,EAAAC,EAAAC,cAAA,UAAKmP,cAajE,GAAGH,EAAOnI,OAAS,EACf,OACI/G,EAAAC,EAAAC,cAACsB,EAAA,SAAD,KACIxB,EAAAC,EAAAC,cAAA,OAAKwB,MAAO,CAACE,OAAQ,YAAayF,UAAW,iBAAkBD,UAAW,OAAQpE,SAAU,KAA5F,qBACAhD,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACV6O,EAAO3I,IAAK,SAAC4I,EAAE1I,GACZ,OAAQzG,EAAAC,EAAAC,cAAA,OAAKwG,IAAG,QAAA3E,OAAU0E,GAAKpG,UAAU,cAC7BL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,oBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SAAS8O,EAAE3I,OAC1BxG,EAAAC,EAAAC,cAAA,OAAKC,MAAM,2DAA2DuB,MAAO,CAAC4N,OAAQ,OAAQxF,UAAW,GAAI/G,MAAO,UAAWC,SAAU,KAAzI,yEAWxC,GAAGzB,KAAKZ,MAAM+M,KAAK,CACf,IAAI6B,EAAgBhO,KAAKZ,MAAM+M,KAAKwB,OAAOpI,OAAQ,SAAAqI,GAAC,OAAKA,EAAER,QAC3D,GAAGY,EAAcxI,OAAS,EACtB,OACI/G,EAAAC,EAAAC,cAACsB,EAAA,SAAD,KACIxB,EAAAC,EAAAC,cAAA,OAAKwB,MAAO,CAACE,OAAQ,iBAAkByF,UAAW,iBAAkBD,UAAW,OAAQpE,SAAU,KAAjG,mBACAhD,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACVkP,EAAchJ,IAAK,SAACiJ,EAAI/I,GACrB,OAAQzG,EAAAC,EAAAC,cAAA,OAAKwG,IAAG,WAAA3E,OAAa0E,GAAIpG,UAAU,cAAaL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,4BAA4BmP,EAAGhJ,oDAS9H,OAAGjF,KAAKZ,MAAM+M,KAAK+B,OACPzP,EAAAC,EAAAC,cAACsB,EAAA,SAAD,KACIxB,EAAAC,EAAAC,cAAA,OAAKwB,MAAO,CAACyK,cAAe,EAAGnJ,SAAU,GAAIsE,aAAc,iBAAkBrF,MAAO,MAAOL,OAAQ,cAAnG,UACA5B,EAAAC,EAAAC,cAAA,OAAKwB,MAAO,CAACkI,cAAe,GAAI7G,MAAO,UAAWoJ,cAAe,EAAGnJ,SAAU,KAAMzB,KAAKZ,MAAM+M,KAAK+B,SAI7GzP,EAAAC,EAAAC,cAAA,OAAKwB,MAAO,CAACsB,SAAU,GAAIX,QAAS,KAApC,qFAGP,GAAGd,KAAKZ,MAAM+M,KAAK+B,OAAO,KAAAC,EACUnO,KAAKZ,MAAM+M,KAArCiC,EADgBD,EAChBC,YAAaC,EADGF,EACHE,UACnB,OACI5P,EAAAC,EAAAC,cAAA,OAAKwB,MAAO,CAACE,OAAQ,OAAQD,SAAU,KAAMkO,UAAW,WACpD7P,EAAAC,EAAAC,cAAA,SAAOG,UAAU,gBACbL,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIwB,MAAO,CAACyK,cAAe,EAAG2D,WAAY,QAASC,QAASJ,EAAY,GAAG,GAAG5I,OAAS,GAAvF,qCAEJ/G,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIG,UAAU,aAAaqB,MAAO,CAACoO,WAAY,WAA/C,WACCH,EAAY,GAAG,GAAGpJ,IAAK,SAACyF,EAAKvF,GAC1B,OAAOzG,EAAAC,EAAAC,cAAA,MAAIG,UAAU,aAAaqG,IAAG,aAAA3E,OAAe0E,IAA7C,SAAyDA,EAAE,MAGzEkJ,EAAYpJ,IAAK,SAACyJ,EAAKvJ,GACpB,OACIzG,EAAAC,EAAAC,cAAA,MAAIwG,IAAG,GAAA3E,OAAKiO,EAAI,IAATjO,OAAc0E,IACjBzG,EAAAC,EAAAC,cAAA,MAAIG,UAAU,eAAe2P,EAAI,IAChCA,EAAI,GAAGzJ,IAAK,SAAC0J,EAAMlM,GAChB,IAAI2C,EAAG,QAAA3E,OAAWkO,EAAX,KAAAlO,OAAmBgC,GAC1B,OAAGkM,GAAQL,EACA5P,EAAAC,EAAAC,cAAA,MAAIwG,IAAKA,EAAKrG,UAAU,YAAY4P,QAEnBzH,IAApBwH,EAAI,GAAGjM,EAAM,SAA6ByE,IAATyH,EAC9BjQ,EAAAC,EAAAC,cAAA,MAAIwG,IAAKA,EAAKrG,UAAU,oBAAoB4P,GAG5CjQ,EAAAC,EAAAC,cAAA,MAAIwG,IAAKA,GAAe,IAATuJ,EAAa,EAAKA,GAAQ,sDAaxF,OAAG1O,KAAKZ,MAAM8C,MAENzD,EAAAC,EAAAC,cAAA,OAAKG,UAAU,4BAAf,sDAKAkB,KAAKZ,MAAM+M,KACP1N,EAAAC,EAAAC,cAAA,OAAKG,UAAU,eACXL,EAAAC,EAAAC,cAAA,MAAIwB,MAAO,CAAC4F,aAAc,oBAAqB3F,SAAU,SAAzD,gBACA3B,EAAAC,EAAAC,cAAA,OAAKwB,MAAO,CAACE,OAAQ,iBAAkBoB,SAAU,GAAImJ,cAAe,EAAGxK,SAAU,MAAOJ,KAAKZ,MAAM+M,KAAKvN,OACxGH,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kBACVkB,KAAK2O,gBAEVlQ,EAAAC,EAAAC,cAAA,OAAKG,UAAU,uBACXL,EAAAC,EAAAC,cAAA,aAASqB,KAAKZ,MAAM+M,KAAKyC,cAAc5O,KAAKZ,MAAM+M,KAAK0C,YAAa,KAAKC,QAAQ,GAAjF,oBACArQ,EAAAC,EAAAC,cAAA,OAAKG,UAAU,yBAAyBqB,MAAO,CAACO,MAAK,GAAAF,OAAMR,KAAKZ,MAAM+M,KAAKyC,cAAc5O,KAAKZ,MAAM+M,KAAK0C,YAAa,IAAjE,OACjDpQ,EAAAC,EAAAC,cAAA,OAAKG,UAAU,mBAGvBL,EAAAC,EAAAC,cAAA,WACKqB,KAAK+O,sBAET/O,KAAKgP,eACLhP,KAAKiP,uBAKlBxQ,EAAAC,EAAAC,cAAA,OAAKG,UAAU,oBACXL,EAAAC,EAAAC,cAACsH,EAAD,CAAanC,YAAY,gDAKjC,OACIrF,EAAAC,EAAAC,cAACsB,EAAA,SAAD,KACIxB,EAAAC,EAAAC,cAACuB,EAAD,MACAzB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kBACXL,EAAAC,EAAAC,cAAA,OAAKwB,MAAO,CAACC,SAAU,IAAMC,OAAQ,OAAQS,QAAS,KACjDd,KAAKuN,0BAnLJrO,aCgBXgQ,mLAbX,OACEzQ,EAAAC,EAAAC,cAACwQ,EAAA,EAAD,KACE1Q,EAAAC,EAAAC,cAACyQ,EAAA,EAAD,KACE3Q,EAAAC,EAAAC,cAAC0Q,EAAA,EAAD,CAAOC,OAAK,EAACnM,KAAK,IAAIoM,UAAWpQ,IACjCV,EAAAC,EAAAC,cAAC0Q,EAAA,EAAD,CAAOC,OAAK,EAACnM,KAAK,YAAYoM,UAAW3I,IACzCnI,EAAAC,EAAAC,cAAC0Q,EAAA,EAAD,CAAOC,OAAK,EAACnM,KAAK,+BAA+BoM,UAAWrD,IAC5DzN,EAAAC,EAAAC,cAAC0Q,EAAA,EAAD,CAAOC,OAAK,EAACnM,KAAK,wBAAwBoM,UAAW7B,aAR7CxO,aCKEsQ,QACW,cAA7B1C,OAAO2C,SAASC,UAEe,UAA7B5C,OAAO2C,SAASC,UAEhB5C,OAAO2C,SAASC,SAAS1C,MACvB,2DCZN2C,IAASC,OAAOnR,EAAAC,EAAAC,cAACkR,EAAD,MAASnQ,SAASC,eAAe,SD2H3C,kBAAmBmQ,WACrBA,UAAUC,cAAcC,MAAM3L,KAAK,SAAA4L,GACjCA,EAAaC,mCEnInBC,EAAAC,QAAiBC,EAAAC,EAAuB,4DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.d1ac0eaa.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport logo from '../images/logo.svg';\n\nclass Navbar extends Component{\n    render() {\n        return(\n            <nav>\n                <a title='InstantRCV' href='/' className='float-left logo nav-items'>\n                    <span><img alt='Logo' src={logo} /></span>\n                    <span className='orange-1'>Instant</span><span className='orange-2'>RCV</span>\n                </a>\n                <div className='float-right nav-items'>\n                    <a href='/new-poll' className='btn nav-btn'>\n                        <span></span>\n                        <span>Create a Poll</span>\n                    </a>\n                </div>\n            </nav>\n        )\n    }\n}\n\nexport default Navbar;\n\n","import React, {Component, Fragment} from 'react';\nimport Navbar from './Navbar';\nimport landingImg from '../images/landing_img.png'\nimport sunImg from '../images/sun.png';\n\n\nclass Landing extends Component {\n    state = {\n        img1Loaded: false,\n        img2Loaded: false\n    }\n    img1Loaded = () => {\n        this.setState({img1Loaded: true});\n        let el = document.getElementById('landing-img-1');\n        el.parentNode.removeChild(el);\n    }\n    img2Loaded = () => {\n        this.setState({img2Loaded: true});\n        let el = document.getElementById('landing-img-2');\n        el.parentNode.removeChild(el);\n    }\n    imagesLoaded = () => {\n        if(this.state.img1Loaded && this.state.img2Loaded){\n            return ' loaded'\n        }\n        return ''\n    }\n    render(){\n        return(\n            <Fragment>\n                <Navbar />\n                <div className='main-container mc-2 landing-page-container row'>\n                    <div className='landing-col-2 landing-section-1'>\n                        <div style={{maxWidth: 500, margin: 'auto', position: 'relative'}}>\n                            <img alt='Sun' src={sunImg} className={`sun-img landing-img${this.imagesLoaded()}`} />\n                            <img alt='Voting' src={landingImg} width='100%' className={`landing-img${this.imagesLoaded()}`}/>\n                            <img id='landing-img-1' alt=\"Loading\" src={sunImg} width='50px' style={{display: 'none'}} onLoad={() => this.img1Loaded()}/>\n                            <img id='landing-img-2' alt=\"Loading\" src={landingImg} width='50px' style={{display: 'none'}} onLoad={() => this.img2Loaded()}/>\n                        </div>\n                    </div>\n                    <div className='landing-col-2 landing-section-2'>\n                        <div style={{maxWidth: 500}}>\n                            <div className='landing-big-text'>Create Your Own RCV Poll</div>\n                            <div className='landing-small-text'> Use our free tool to create your own Ranked Choice \n                            Voting (RCV) polls. Just build your poll, then we'll email it to your voters and calculate the winner!</div>\n                        </div>\n                    </div>\n                </div>\n                <div className='row' style={{padding: '50px 20px'}}>\n                    <div className='landing-col-2'>\n                        <div style={{maxWidth: 500, margin: 'auto'}}>\n                            <div className='landing-big-text'>How It Works</div>\n                            <p className='landing-p'>\n                            Ranked Choice Voting (RCV), also known as Instant-runoff voting, is a type of preferential voting method used in elections with \n                            more than two candidates or voting options. Instead of voting only for a single candidate, voters in RCV elections \n                            rank the candidates in order of preference. Ballots are initially counted for each elector's top choice, \n                            losing candidates are eliminated, and ballots for losing candidates are redistributed until one \n                            candidate is the top remaining choice of a majority of the voters. \n                            When the field is reduced to two, it has become an \"instant runoff\" that allows a comparison \n                            of the top two candidates head-to-head. You can also learn more by reading <a target='_blank' rel='noopener noreferrer' className='link' href='https://en.wikipedia.org/wiki/Instant-runoff_voting'>this Wikipedia article</a>.</p>\n                        </div>\n                    </div>\n                    <div className='landing-col-2 landing-vid-container' style={{maxWidth: 600, padding: 20, display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n                        <iframe title='How RCV Works - YouTube' width=\"100%\" height='370px' src=\"https://www.youtube.com/embed/_5SLQXNpzsk\" frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n                    </div>\n                </div>\n                <div className='text-center' style={{padding: '50px 20px', background: '#333', color: '#fff'}}>\n                    <div className='landing-big-text'>Now You're In The Know...</div>\n                    <p style={{fontSize: 20, maxWidth: 650, margin: '10px auto 30px'}}> So why not give RCV a shot for \n                    your next important (or unimportant) group decision? It's 100% free, and we'll never send an email that you didn't ask for. Do it for America!</p>\n                    <div className='p-10'>\n                        <a href='/new-poll' className='btn btn-white'>Create a New RCV Poll</a>\n                    </div>\n                </div>\n            </Fragment>\n        )\n    }\n}\n\nexport default Landing;","import React, {Component} from 'react';\n\nclass FormInput extends Component{\n    state={\n        focused: false\n    }\n    handleFocus = () => {\n        this.setState({focused: true, touched: true});\n    }\n    handleBlur = () => {\n        this.setState({focused: false})\n    }\n    hasError = () => {\n        return (this.props.submitted && this.props.error)\n    }\n    render(){\n        const {type, name, label, value, index, error} = this.props;\n        return(\n            <div className={`input-container${this.state.focused ? ' focused' : ''}${this.hasError() ? ' has-error' : ''}`}>\n                <div className='input-label-container'>\n                <div className={`label${this.state.focused || this.props.value ? ' focused' : ''}`}>{label}</div>\n                    <input \n                        autoComplete={name===\"emails\" || name===\"createdBy\" ? name : \"off\"}\n                        className='form-input' \n                        type={type} \n                        name={name} \n                        onFocus={() => this.handleFocus()} \n                        onBlur={() => this.handleBlur()}\n                        value={value}\n                        onChange={event => this.props.handleChange(event.target.value, name, index)}\n                    />\n                </div>\n                <div className='border-container'>\n                    <div className='border-filler'></div>\n                </div>\n                <div className='error-msg'>{(this.hasError()) && error}</div>\n                {index > 3 && <button \n                                className='remove-item' \n                                title='Remove this voting option' \n                                onClick={() => this.props.removeInput(index)}>\n                                <span>&times;</span>\n                                </button>}\n            </div>\n        )\n    }\n}\n\nexport default FormInput;","import React from 'react';\n\nconst vectors = {\n    plus: {path: 'M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z',\n        viewBox: '0 0 448 512'}\n};\n\nconst Icon = ({color, icon, width}) =>{\n    return(\n        <svg aria-hidden=\"true\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox={vectors[icon].viewBox} style={{width}}><path fill={color} d={vectors[icon].path}></path></svg>\n    )\n}\n\nexport default Icon;","import React,{Fragment} from 'react';\n\nconst LoadingIcon = ({classOption}) => {\n    return(\n        <Fragment>\n            <div className={`${classOption || 'loading-container'}`} alt=\"Loading...\">\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n            </div>\n            {classOption && <div className='p-10'>Loading...</div>}\n        </Fragment>\n    )\n}\nexport default LoadingIcon;","import React, {Component} from 'react';\nimport LoadingIcon from './LoadingIcon';\nimport axios from 'axios';\n\nclass PollConfirmationModal extends Component {\n    state = {\n        submitting: false,\n        error: false\n    }\n    handleSubmit = () => {\n        this.setState({submitting: true});\n        axios.post('/api/create-poll', this.props.values)\n        .then( ({data, status}) => {\n            if(status===201){\n                this.props.handleSuccess(data)\n            }\n            else{\n                this.setState({error: true, submitting: false});\n            }\n        })\n        .catch( err => {\n            console.log(err);\n            this.setState({error: true, submitting: false});\n        })\n    }\n    renderEmails = () => {\n        return this.props.values.emails.split(',').map( (email, i) => {\n            return <li key={`${email + i}`}>{email.trim()}</li>\n        })\n    }\n    renderOptions = () => {\n        return this.props.values.options.filter(i => i.length > 0).map( (option, i) => {\n            return (<li key={`option-${i}`}>{option}</li>)\n        })\n    }\n    render(){\n        const {modalStatus, values, handleModalClose} = this.props;\n        return(\n            <div className={`modal-backdrop ${modalStatus}`}>\n                <div className='modal-container p-10'>\n                    <div style={{fontSize: 32, marginBottom: 10}} className='text-center'>Confirmation</div>\n                    <p style={{marginBottom: 20, fontSize: 16, textAlign: 'center'}}>Please confirm your poll entries are correct before submitting</p>\n                    <div className='confirmation-values p-10' style={{borderTop: '1px solid #ddd', borderBottom: '1px solid #ddd'}}>\n                        <div><strong>Poll Title: </strong>{values.title}</div>\n                        <div>\n                            <strong>Voting Options:</strong>\n                            <div>\n                                <ul style={{paddingLeft: 30}}>\n                                    {this.renderOptions()}\n                                </ul>\n                            </div>\n                        </div>\n                        <div>\n                            <strong>Email Recipients:</strong>\n                            <div>\n                                <ul style={{paddingLeft: 30}}>\n                                    {this.renderEmails()}\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                    {this.state.submitting ? <div className='text-right p-5'><LoadingIcon /></div> : (<div className='text-right'>\n                        <button onClick={() => handleModalClose()} className='btn btn-white m-10'>Cancel</button>\n                        <button onClick={() => this.handleSubmit()} className='btn btn-orange btn-orange-2 m-10'>Looks Good!</button>\n                    </div>)}\n                    {this.state.error && <div style={{color: '#d24425'}} className='text-right p-10'>An error occurred. Please try again later.</div>}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default PollConfirmationModal;","import React from 'react';\n\nconst PollCreatedModal = ({pollID}) => {\n    return(\n        <div>\n            <div className={`text-center modal-backdrop open`}>\n                <div className='modal-container p-10'>\n                    <div style={{color: '#2c74c1', fontSize: 49, marginBottom: 15}}>Success!</div>\n                    <div style={{borderBottom: '1px solid #ddd', borderTop: '1px solid #ddd', padding: '20px 10px', margin: '20px auto'}}>\n                        <div style={{margin: 'auto', maxWidth: 450}}>\n                            You have successfully created a new poll. \n                            You should receive an email with a link to vote, assuming you added yourself as a voter. \n                            What would you like to do next?\n                        </div>\n                    </div>\n                    <div className='text-right'>\n                        <a href='/' className='btn btn-white m-10'>Go Home</a>\n                        <a href={`/poll/${pollID}/results`} className='btn btn-orange btn-orange-2 m-10'>View Results</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default PollCreatedModal;","export const inputValidation = input => {\n    if(!input){\n        return 'This is a required field';\n    }\n    else if (input.length > 80){\n        return \"This field can't exceed 80 characters\"\n    }\n    return null;\n}\n\nexport const nameValidation = input => {\n    if(!input){\n        return 'This is a required field';\n    }\n    else if (/^[a-z ,.'-]+$/i.test(input) === false){\n        return \"Please enter your full name\"\n    }\n    return null;\n}\n\nexport const emailValidation = emails =>{\n    if (!emails){\n        return 'This is a required field';\n    }\n    const re = /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n    const invalidEmails = emails.split(',')\n    .map(email => email.trim())\n    .filter(email => re.test(email) === false);\n    if (invalidEmails.length > 0){\n        return `The following emails are invalid: ${invalidEmails}`\n    }\n    if (emails.split(',').length > 200){\n        return 'No more than 200 email recipients are allowed'\n    }\n    return null;\n}\n\nexport const ordinals = ['1st', '2nd', '3rd', '4th', '5th', '6th', '7th', '8th', '9th', '10th'];","import React, {Component, Fragment} from 'react';\nimport FormInput from './FormInput';\nimport Navbar from './Navbar';\nimport Icon from './Icon';\nimport PollConfirmationModal from './PollConfirmationModal';\nimport PollCreatedModal from './PollCreatedModal';\nimport {inputValidation, emailValidation, nameValidation} from '../utils';\n\nclass PollNew extends Component {\n    state = {\n        inputCount: 3,\n        values: {\n            emails: '',\n            title: '',\n            createdBy: '',\n            options: ['', '', '', '', '', '', '', '', '', '']\n        },\n        errors: {\n            emails: '',\n            title: '',\n            createdBy: '',\n            options: ['', '', '', '', '', '', '', '', '', '']\n        },\n        hasError: false,\n        submitted: false,\n        pollID: null,\n        modalStatus: 'closed'\n    }\n    componentWillMount(){\n        document.title = 'Create a New Poll | InstantRCV';\n    }\n    handleChange = (value, name, index = null) => {\n        let values = Object.assign({}, this.state.values);\n        if(index){\n            values.options[index-1] = value;\n        }\n        else{\n            values[name] = value;\n        }\n        this.setState({values}, this.validateInputs);\n    }\n    validateInputs = (callback) => {\n        let hasError = false;\n        let errors = Object.assign({}, this.state.errors);\n        errors.emails = emailValidation(this.state.values.emails);\n        errors.title = inputValidation(this.state.values.title);\n        errors.createdBy = nameValidation(this.state.values.createdBy);\n        if(errors.emails || errors.title) {hasError = true}\n        for (let i = 0; i < this.state.inputCount; i++){\n            errors.options[i] = inputValidation(this.state.values.options[i]);\n            if(errors.options[i]){hasError = true}\n        }\n        this.setState({errors, hasError}, callback);\n    }\n    submitAction = () => {\n        if(!this.state.hasError){\n            this.setState({modalStatus: 'open'})\n        }\n    }\n    handleSubmit = event => {\n        event.preventDefault();\n        this.setState({submitted: true}, this.validateInputs(this.submitAction));\n    }\n    handleSuccess = pollID => {\n        this.setState({pollID, modalStatus: 'closed'})\n    }\n    addInput = () => {\n        this.setState({inputCount: this.state.inputCount+1});\n        this.submitBtn.scrollIntoView({ behavior: \"smooth\" });\n    }\n    removeInput = index => {\n        let values = Object.assign({}, this.state.values);\n        values.options[index-1] = '';\n        let len = values.options.length;\n        for(let i = index - 1; i < len - 1; i++){\n            values.options[i] = values.options[i+1]\n        }\n        values.options[len] = '';\n        this.setState({values, inputCount: this.state.inputCount - 1});\n    }\n    isDisabled = () => {\n        return this.state.inputCount >= this.state.values.options.length\n    }\n    renderInputs = () => {\n        let inputArr=[];\n        for(let i = 0; i < this.state.inputCount; i++){\n            inputArr.push(<FormInput \n                            key={`option${i}`}\n                            type='text' \n                            name={`option$${i}`} \n                            label={`Enter voting option #${i+1}`}\n                            index={i+1}\n                            value={this.state.values.options[i]}\n                            error={this.state.errors.options[i]}\n                            submitted={this.state.submitted}\n                            handleChange={this.handleChange}\n                            removeInput={this.removeInput}\n                            />)\n        }\n        return inputArr;\n    }\n    render(){\n        return(\n            <Fragment>\n                {this.state.modalStatus === 'open' && <PollConfirmationModal \n                                                        modalStatus={'open'} \n                                                        values={this.state.values} \n                                                        handleModalClose={() => this.setState({modalStatus: 'closed'})}\n                                                        handleSuccess={this.handleSuccess}\n                                                        />}\n                {this.state.pollID && <PollCreatedModal pollID={this.state.pollID} />}\n                <Navbar />\n                <div className='main-container'>\n                    <h1 className='text-center'>Create a New RCV Poll</h1>\n                    <div className='p-10 text-center' style={{margin: 'auto', maxWidth: 600}}>*Limit 10 voting options per poll. Please separate each vote recipient's email address with a comma.</div>\n                    <div className='form-container'>\n                        <form onSubmit={this.handleSubmit}>\n                            <input type=\"hidden\" value=\"something\" />\n                            <FormInput \n                                type='text' \n                                name='createdBy' \n                                label='Enter your full name' \n                                value={this.state.values.createdBy} \n                                error={this.state.errors.createdBy}\n                                submitted={this.state.submitted}\n                                handleChange={this.handleChange} \n                            />\n                            <FormInput \n                                type='text' \n                                name='emails' \n                                label='Enter voter emails' \n                                value={this.state.values.emails} \n                                error={this.state.errors.emails}\n                                submitted={this.state.submitted}\n                                handleChange={this.handleChange} \n                            />\n                            <FormInput \n                                type='text' \n                                name='title' \n                                label='Enter a poll title' \n                                value={this.state.values.title}\n                                error={this.state.errors.title}\n                                submitted={this.state.submitted}\n                                handleChange={this.handleChange} \n                            />\n                            {this.renderInputs()}\n                            <div style={{paddingBottom: 20}}>\n                                <button \n                                ref={el => this.submitBtn = el}\n                                className={`float-right btn btn-orange`}\n                                >SUBMIT POLL</button>\n                            </div>\n                        </form>\n                        <button \n                            style={{marginTop: -20}}\n                            className={`float-left btn btn-white${this.isDisabled() ? ' disabled': ''}`}\n                            disabled={this.isDisabled()}\n                            onClick={() => this.addInput()}><Icon icon='plus' width='10px' color='#333'/> <span>Add Option</span></button>\n                    </div>\n                </div>\n            </Fragment>\n        )\n    }\n}\n\nexport default PollNew;","import React, {Component} from 'react';\nimport {Droppable, Draggable } from 'react-beautiful-dnd';\nimport {ordinals} from '../utils';\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n    userSelect: 'none',\n    height: 100,\n    display: 'flex',\n    overflow: 'hidden',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 10,\n    background: isDragging ? '#333' : '#ffc107',\n    color: isDragging ? '#fff' : '#333',\n    boxShadow: isDragging ? '0 2px 8px 0 rgba(0,0,0,.2), 0 3px 4px 0 rgba(0,0,0,.14), 0 3px 3px 1px rgba(0,0,0,.12)' : 'none',\n    border: '1px solid #555',\n    borderRadius: 5,\n    zIndex: 99999,\n    ...draggableStyle\n});\n\nconst getListStyle = (isDraggingOver, itemLength) => ({\n    background: isDraggingOver ? '#bbb' : '#777',\n    padding: 10,\n    width: '100%',\n    height: (110 * itemLength) + 10,\n    position: 'relative'\n});\n\nclass PollDroppable extends Component{\n    renderPlaceholders = (dragValue) => {\n        let placeholders = [];\n        for (let i = 0; i < this.props.itemLength; i++){\n            placeholders.push(\n                <div className='item-placeholder' key={`ph-${i}`} style={{display: this.props.items.length + dragValue > i ? 'none': 'flex', top: i * 110 + 10}}>\n                    Drag your {ordinals[i]} choice here\n                </div>\n            )\n        }\n        return placeholders;\n    }\n    render(){\n        return(\n            <Droppable droppableId={this.props.droppableId}>\n            {(provided, snapshot) => (\n                <div\n                    ref={provided.innerRef}\n                    style={getListStyle(snapshot.isDraggingOver, this.props.itemLength)}>\n                    {this.props.items.map((item, index) => (\n                        <Draggable\n                            key={item.id}\n                            draggableId={item.id}\n                            index={index}>\n                            {(provided, snapshot) => (\n                                <div\n                                    ref={provided.innerRef}\n                                    {...provided.draggableProps}\n                                    {...provided.dragHandleProps}\n                                    style={getItemStyle(\n                                        snapshot.isDragging,\n                                        provided.draggableProps.style\n                                    )}>\n                                    {item.content}\n                                </div>\n                            )}\n                        </Draggable>\n                    ))}\n                    {this.props.droppableId==='droppable2' && this.renderPlaceholders(snapshot.isDraggingOver ? 1 : 0)}\n                    {provided.placeholder}\n                </div>\n            )}\n        </Droppable>\n        )\n    }\n}\n\nexport default PollDroppable;","import React, {Component} from 'react';\nimport axios from 'axios';\nimport LoadingIcon from './LoadingIcon';\nimport {ordinals} from '../utils';\n\nclass PollSelectionModal extends Component {\n    state = {\n        submitting: false,\n        error: false\n    }\n    handleSubmit = () => {\n        this.setState({submitting: true})\n        axios.post(`/api/poll/${this.props.pollID}/voter/${this.props.voterID}`, this.props.selections)\n        .then( res =>{\n            if(res.status===202){\n                this.props.handleSuccess();\n            }\n            else{\n                this.setState({error: true, submitting: false});\n            }\n        })\n        .catch( () => {\n            this.setState({error: true, submitting: false});\n        })\n    }\n    renderSelections = () => {\n       return this.props.selections.map( (selection, index) => {\n            return(<tr key={`r-${index}`}>\n                        <td><strong>{ordinals[index]} Choice:</strong></td>\n                        <td>{selection}</td>\n                    </tr>\n                )\n        })\n    }\n    render(){\n        const {modalStatus, title, handleModalClose} = this.props;\n        return(\n            <div className={`text-center modal-backdrop ${modalStatus}`}>\n                <div className='modal-container p-10'>\n                    <div style={{fontSize: 28, marginBottom: 20}}>{title}</div>\n                    <p style={{marginBottom: 20, fontSize: 16}}>Please confirm your poll entries are correct before submitting</p>\n                    <div style={{borderBottom: '1px solid #ddd', borderTop: '1px solid #ddd', padding: '10px 10px 20px 10px', margin: '20px auto'}}>\n                        <div style={{color: '#444', letterSpacing: 3, marginBottom: 20, fontSize: 22, textDecoration: 'underline'}}>YOUR SELECTIONS</div>\n                        <div>\n                            <table className='table'>\n                                <tbody>\n                                    {this.renderSelections()}\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                    {this.state.submitting ? <div className='text-right p-5'><LoadingIcon /></div> : (<div className='text-right'>\n                        <button onClick={() => handleModalClose()} className='btn btn-white m-10'>Cancel</button>\n                        <button onClick={() => this.handleSubmit()} className='btn btn-orange btn-orange-2 m-10'>Looks Good!</button>\n                    </div>)}\n                    {this.state.error && <div style={{color: '#d24425'}} className='text-right p-10'>An error occurred. Please try again later.</div>}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default PollSelectionModal;","import React from 'react';\n\nconst PollSuccessModal = ({pollID}) => {\n    return(\n        <div>\n            <div className={`text-center modal-backdrop open`}>\n                <div className='modal-container p-10'>\n                    <div style={{color: '#2c74c1', fontSize: 49, marginBottom: 15}}>Success!</div>\n                    <div style={{borderBottom: '1px solid #ddd', borderTop: '1px solid #ddd', padding: '20px 10px', margin: '20px auto'}}>\n                        <div style={{margin: 'auto', maxWidth: 400}}>\n                            We have successfully received your voting results. Now what would you like to do next?\n                        </div>\n                    </div>\n                    <div className='text-right'>\n                        <a href='/' className='btn btn-white m-10'>Go Home</a>\n                        <a href={`/poll/${pollID}/results`} className='btn btn-orange btn-orange-2 m-10'>View Results</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default PollSuccessModal;","import React, { Component, Fragment} from 'react';\nimport axios from 'axios';\nimport { DragDropContext} from 'react-beautiful-dnd';\nimport Navbar from './Navbar';\nimport PollDroppable from './PollDroppable';\nimport PollSelectionModal from './PollSelectionModal';\nimport PollSuccessModal from './PollSuccessModal';\nimport LoadingIcon from './LoadingIcon';\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n    return result;\n};\n\nconst move = (source, destination, droppableSource, droppableDestination) => {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n    destClone.splice(droppableDestination.index, 0, removed);\n    const result = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n    return result;\n};\n\nclass PollSelection extends Component {\n    state = {\n        poll: null,\n        error: false,\n        success: false,\n        modalStatus: 'closed',\n        itemLength: 0,\n        items: [],\n        selected: []\n    };\n\n    id2List = {\n        droppable: 'items',\n        droppable2: 'selected'\n    };\n\n    getList = id => this.state[this.id2List[id]];\n\n    onDragEnd = result => {\n        const { source, destination } = result;\n        if (!destination) {\n            return;\n        }\n        if (source.droppableId === destination.droppableId) {\n            const items = reorder(\n                this.getList(source.droppableId),\n                source.index,\n                destination.index\n            );\n            let state = { items };\n            if (source.droppableId === 'droppable2') {\n                state = { selected: items };\n            }\n            this.setState(state);\n        } else {\n            const result = move(\n                this.getList(source.droppableId),\n                this.getList(destination.droppableId),\n                source,\n                destination\n            );\n            this.setState({\n                items: result.droppable,\n                selected: result.droppable2\n            });\n        }\n    };\n    componentWillMount(){\n        document.title = 'Make Your Poll Selections | InstantRCV';\n        this.pollID = this.props.match.params.pollID;\n        this.voterID = this.props.match.params.voterID;\n        axios.get(`/api/poll/${this.pollID}/voter/${this.voterID}`)\n        .then( res => {\n            if(res.data){\n                let items = res.data.options.map( (item, index) => ({\n                    id: `${item.replace(/ /, '')}${index}`,\n                    content: item\n                }))\n                this.setState({poll: res.data, items, itemLength: items.length});\n            }\n            else{\n                this.setState({error: true})\n            }\n        })\n        .catch(() => {\n            this.setState({error: true})\n        })\n    }\n    resetItems = () => {\n        let initItems = [...this.state.poll.options];\n        let items = initItems.map( (item, index) => ({\n            id: `${item.replace(/ /, '')}${index}`,\n            content: item\n        }))\n        this.setState({items, selected: []});\n    }\n    handleSubmit = () => {\n        if(this.state.selected.length !== this.state.itemLength){\n            window.alert('Please rank all options before submitting your vote')\n        }\n        else{\n            this.setState({modalStatus: 'open'})\n        }\n    }\n    handleSuccess = () => {\n        this.setState({success: true, modalStatus: 'closed'})\n    }\n    renderContent(){\n        if(this.state.error){\n            return(\n                <div>\n                    This poll could not be loaded or does not exist.\n                </div>\n            )\n        }\n        else if (!this.state.poll){\n            return(\n                <div>\n                    <LoadingIcon />\n                    Loading...\n                </div>\n            )\n        }\n        else if (this.state.poll.voted){\n           return(\n                <div>\n                    You have already voted in this poll. <a href={`/poll/${this.pollID}/results`}style={{color: \"#fff\", textDecoration: \"underline\"}}>Click here to view the results</a>.\n                </div>\n           )\n        }\n        return(\n            <div style={{maxWidth: 800, margin: 'auto'}}>\n                <h1 className='text-center' style={{marginBottom: 10}}>{this.state.poll.title}</h1>\n                <div className='p-10 text-center'>Please rank the provided options in order \n                    from most preferable to least preferable</div>\n                <div className='border-holder'></div>\n                <div className='row' style={{marginBottom: 20}}>\n                    <DragDropContext onDragEnd={this.onDragEnd}>\n                        <div className='col-2-always p-5'>\n                            <div className='text-center font-18 p-5'>OPTIONS</div>\n                            <PollDroppable items={this.state.items} droppableId='droppable' itemLength={this.state.itemLength} />\n                        </div>\n                        <div className='col-2-always p-5'>\n                            <div className='text-center font-18 p-5'>SELECTIONS</div>\n                            <PollDroppable items={this.state.selected} droppableId='droppable2' itemLength={this.state.itemLength} />\n                        </div>\n                    </DragDropContext>\n                </div>\n                <div className='border-holder'></div>\n                <div className='text-right'>\n                    <button onClick={() => this.resetItems()} className='btn btn-black m-10'>RESET</button>\n                    <button onClick={() => this.handleSubmit()} style={{width: 130, fontSize: 22}} className='btn btn-orange m-10 box-shadow'>SUBMIT</button>\n                </div>\n            </div>\n        )\n    }\n    render() {\n        return(\n            <Fragment>\n                <Navbar/>\n                <div className='main-container text-center'>\n                    {this.renderContent()}\n                </div>\n                <PollSelectionModal \n                handleModalClose={() => this.setState({modalStatus: 'closed'})}\n                handleSuccess={this.handleSuccess}\n                modalStatus={this.state.modalStatus}\n                title={this.props.title}\n                selections={this.state.selected.map( ({content}) => content)}\n                pollID={this.pollID}\n                voterID={this.voterID}\n                />\n                {this.state.success && <PollSuccessModal pollID={this.pollID}/>}\n            </Fragment>\n        )\n    }\n}\n\nexport default PollSelection;","import React, {Component, Fragment} from 'react';\nimport Navbar from './Navbar';\nimport LoadingIcon from './LoadingIcon'\nimport axios from 'axios';\nimport {ordinals} from '../utils';\n\nclass PollResults extends Component{\n    state = {\n        poll: null,\n        error: false\n    }\n    componentWillMount(){\n        document.title = \"View Poll Results | InstantRCV\"\n        this.pollID = this.props.match.params.pollID;\n        axios.get(`/api/results/${this.pollID}`)\n        .then( res => {\n            if(res.status === 200){\n                this.setState({poll: res.data});\n            }\n            else{\n                this.setState({error:true});\n            }\n        })\n        .catch( () => {\n            this.setState({error: true})\n        })\n    }\n    renderVoters(){\n        if(this.state.poll){\n            let voters = this.state.poll.voters.filter( v => v.voted);\n            if(this.state.poll.allVotesReceived){\n                return(\n                    <Fragment>\n                        <div style={{margin: '20px auto', borderTop: '1px solid #fff', textAlign: 'left', fontSize: 24}}>Voter Selections:</div>\n                        <div className='row'>\n                            {voters.map( (v,i) => {\n                                return (<div key={`voter${i}`} className='col-3 p-10'>\n                                            <div className='voter box-shadow'>\n                                                <div className='email font-18'>{v.email}</div>\n                                                <table className='table'>\n                                                    <tbody>\n                                                        {v.selections.map( (sel, i) => {\n                                                            return (<tr key={`row-${i}`}>\n                                                                        <td><strong>{ordinals[i]} Choice:</strong></td>\n                                                                        <td>{sel}</td>\n                                                                    </tr>\n                                                            )\n                                                        })}\n                                                    </tbody>\n                                                </table>\n                                            </div>\n                                        </div>)\n                            })}\n                        </div>\n                    </Fragment>\n                )\n            }\n            if(voters.length > 0){\n                return(\n                    <Fragment>\n                        <div style={{margin: '20px auto', borderTop: '1px solid #fff', textAlign: 'left', fontSize: 24}}>Voter Selections:</div>\n                        <div className='row'>\n                            {voters.map( (v,i) => {\n                                return (<div key={`voter${i}`} className='col-3 p-10'>\n                                            <div className='voter box-shadow'>\n                                                <div className='email'>{v.email}</div>\n                                                <div title='Voter selections are hidden until all votes are received' style={{cursor: 'help', marginTop: 10, color: '#e6e6e6', fontSize: 16}}>(RESULTS HIDDEN)</div>\n                                            </div>\n                                        </div>)\n                            })}\n                        </div>\n                    </Fragment>\n                )\n            }\n        }\n    }\n    renderPendingVoters(){\n        if(this.state.poll){\n            let pendingVoters = this.state.poll.voters.filter( v => !v.voted);\n            if(pendingVoters.length > 0){\n                return(\n                    <Fragment>\n                        <div style={{margin: '40px auto 20px', borderTop: '1px solid #fff', textAlign: 'left', fontSize: 24}}>Pending Voters:</div>\n                        <div className='row'>\n                            {pendingVoters.map( (pv, i) => {\n                                return (<div key={`pending-${i}`}className='col-3 p-10'><div className='pending-voter box-shadow'>{pv.email}</div></div>)\n                            })}\n                        </div>\n                    </Fragment>\n                )\n            }\n        }\n    }\n    renderWinner(){\n        if(this.state.poll.winner){\n            return (<Fragment>\n                        <div style={{letterSpacing: 5, fontSize: 24, borderBottom: '1px solid #ddd', width: '80%', margin: '10px auto'}}>WINNER</div>\n                        <div style={{paddingBottom: 10, color: '#ffc107', letterSpacing: 5, fontSize: 44}}>{this.state.poll.winner}</div>\n                    </Fragment>\n                    )\n        }\n        return <div style={{fontSize: 20, padding: 10}}>No winner has been determined yet...</div>\n    }\n    renderResultsTable(){\n        if(this.state.poll.winner){\n            const{resultArray, winCutoff} = this.state.poll;\n            return(\n                <div style={{margin: 'auto', maxWidth: 1200, overflowX: 'scroll'}}>\n                    <table className='result-table'>\n                        <tbody>\n                            <tr>\n                                <td style={{letterSpacing: 2, fontWeight: 'bold'}} colSpan={resultArray[0][1].length + 1}>Vote Counts by Elimination Round</td>\n                            </tr>\n                            <tr>\n                                <td className='round-cell' style={{fontWeight: 'normal'}}>OPTIONS</td>\n                                {resultArray[0][1].map( (res, i) => {\n                                    return <td className='round-cell' key={`round-cell${i}`}>Round {i+1}</td>\n                                })}\n                            </tr>\n                            {resultArray.map( (val, i) => {\n                                return(\n                                    <tr key={`${val[0]}${i}`}>\n                                        <td className='option-cell'>{val[0]}</td>\n                                        {val[1].map( (cell, index) => {\n                                            let key = `cell-${cell}-${index}`;\n                                            if(cell >= winCutoff){\n                                                return <td key={key} className='win-cell'>{cell}</td>\n                                            }\n                                            else if(val[1][index+1] === undefined && cell !== undefined){\n                                                return <td key={key} className='elimination-cell'>{cell}</td>\n                                            }\n                                            else{\n                                                return <td key={key}>{cell === 0 ? 0 : (cell || '-')}</td>\n                                            }\n                                        })}\n                                    </tr>\n                                )\n                            })}\n                        </tbody>\n                    </table>\n                </div>\n            )\n        }\n    }\n    renderContent() {\n        if(this.state.error){\n            return (\n                <div className='p-10 text-center font-18'>\n                    This poll no longer exists or could not be loaded.\n                </div>\n            )\n        }\n        else if(this.state.poll){\n            return (<div className='text-center'>\n                        <h1 style={{borderBottom: '1px solid #f9f9f9', maxWidth: '100%'}}>POLL RESULTS</h1>\n                        <div style={{margin: '50px auto 30px', fontSize: 22, letterSpacing: 3, maxWidth: 600}}>{this.state.poll.title}</div>\n                        <div className='winner-section'>\n                            {this.renderWinner()}\n                        </div>\n                        <div className='progress box-shadow'>\n                            <span>{((this.state.poll.votesReceived/this.state.poll.totalVoters)*100).toFixed(0)}% votes received</span>\n                            <div className='progress-bar-container' style={{width: `${(this.state.poll.votesReceived/this.state.poll.totalVoters)*100}%`}}>\n                                <div className='progress-bar'></div>\n                            </div>\n                        </div>\n                        <div>\n                            {this.renderResultsTable()}\n                        </div>\n                        {this.renderVoters()}\n                        {this.renderPendingVoters()}\n                    </div>\n                )\n        }\n        return (\n            <div className='p-10 text-center'>\n                <LoadingIcon classOption='loading-2' />\n            </div>\n        )\n    }\n    render(){\n        return(\n            <Fragment>\n                <Navbar/>\n                <div className='main-container'>\n                    <div style={{maxWidth: 1000, margin: 'auto', padding: 10}}>\n                        {this.renderContent()}\n                    </div>\n                </div>\n            </Fragment>\n        )\n    }\n}\n\nexport default PollResults;","import React, { Component } from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport Landing from './Landing';\nimport PollNew from './PollNew';\nimport PollSelection from './PollSelection';\nimport PollResults from './PollResults';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route exact path='/' component={Landing} />\n          <Route exact path='/new-poll' component={PollNew} />\n          <Route exact path='/poll/:pollID/voter/:voterID' component={PollSelection} />\n          <Route exact path='/poll/:pollID/results' component={PollResults} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/landing_img.c06e07af.png\";","module.exports = __webpack_public_path__ + \"static/media/sun.80a4a248.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5f854386.svg\";"],"sourceRoot":""}